spring:
  shardingsphere:
    props:
      sql:
        show: true

    #  数据源
    datasource:
      names: ds-master-0,ds-slave-0-1,ds-slave-0-2,ds-master-1,ds-slave-1-1,ds-slave-1-2
      # 主库1
      ds-master-0:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://127.0.0.1:3306/ds0?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF8&zeroDateTimeBehavior=convertToNull&useSSL=false
        username: root
        password: 123456
      # 主库1-从库1
      ds-slave-0-1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://127.0.0.1:3307/ds0?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF8&zeroDateTimeBehavior=convertToNull&useSSL=false
        username: root
        password: 123456
      # 主库1-从库2
      ds-slave-0-2:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://127.0.0.1:3308/ds0?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF8&zeroDateTimeBehavior=convertToNull&useSSL=false
        username: root
        password: 123456
      # 主库2
      ds-master-1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://127.0.0.1:3306/ds1?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF8&zeroDateTimeBehavior=convertToNull&useSSL=false
        username: root
        password: 123456
      # 主库2-从库1
      ds-slave-1-1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://127.0.0.1:3307/ds1?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF8&zeroDateTimeBehavior=convertToNull&useSSL=false
        username: root
        password: 123456
      # 主库2-从库2
      ds-slave-1-2:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://127.0.0.1:3308/ds1?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF8&zeroDateTimeBehavior=convertToNull&useSSL=false
        username: root
        password: root

    rules:
      # 读写分离
      # https://shardingsphere.apache.org/document/5.3.2/en/user-manual/shardingsphere-jdbc/yaml-config/rules/readwrite-splitting/
      readwrite-splitting:
        data-sources:
          ds_0:
            type: Static
            props:
              write-data-source-name: ds-master-0
              read-data-source-names: ds-slave-0-1, ds-slave-0-2
            load-balancer-name: round_robin
          ds_1:
            type: Static
            props:
              write-data-source-name: ds-master-1
              read-data-source-names: ds-slave-1-1, ds-slave-1-2
            load-balancer-name: round_robin

        # 负载均衡算法
        load-balancers:
          # 轮询算法
          round_robin:
            type: ROUND_ROBIN
          # 随机访问
          random:
            type: RANDOM

      #  分片
      #  https://shardingsphere.apache.org/document/5.3.2/en/user-manual/shardingsphere-jdbc/yaml-config/rules/sharding/
      sharding:
        # 分库分表
        tables:
          t_order:
            #  实际数据库节点
            actual-data-nodes: ds_$->{0..1}.t_order_$->{0..1}
            #  分表策略
            database-strategy:
              inline:
                sharding-column: order_id
                algorithm-expression: ds_$->{order_id % 2}
            table-strategy:
              standard:
                sharding-column: order_id
                sharding-algorithm-name: order-table-strategy-inline
            key-generate-strategy:
              column: order_id
              key-generator-name: snowflake
        binding-tables:
        broadcast-tables:

        # 分库默认分片策略
        default-database-strategy:
          standard:
            sharding-column: id
            sharding-algorithm-name: default-database-strategy-inline
        # 分表默认分片策略
        default-table-strategy: none
        # 默认自增主键生成器
        default-key-generate-strategy:
          column: id
          key-generator-name: snowflake
        default-sharding-column: id

        # 分片算法
        sharding-algorithms:
          default-database-strategy-inline:
            type: INLINE
            props:
              algorithm-expression: ds_$->{id % 2}
          order-table-strategy-inline:
            type: INLINE
            props:
              algorithm-expression: t_order_$->{order_id % 2}

        # 分片序列生成器
        key-generators:
          snowflake:
            type: SNOWFLAKE
          #            props:
          #              worker-id: 31
          uuid:
            type: UUID
