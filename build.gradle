buildscript {
    ext {
        springBootVersion = '2.6.11'
        springCloudVersion = '2021.0.4'
        springCloudAlibabaVersion = '2021.0.4.0'

        dubboVersion = '3.1.1'
        springBootAdminVersion = '2.6.9'
        springSecurityOauth2Version = '2.5.2.RELEASE'
        springCloudStarterOauth2Version = '2.2.5.RELEASE'
        springAuthorizationServerVersion = '0.3.1'
        mapstructVersion = '1.5.3.Final'
        nimbusJoseJwtVersion = '9.25.2'
        pagehelperStarterVersion = '1.4.5'
        pagehelperVersion = '5.3.2'
        mybatisPlusVersion = '3.5.2'
        mybatisPlusJoinVersion = '1.3.9'
        mybatisPlusGeneratorVersion = '3.5.2'
        freemarkerVersion = '2.3.31'
        druidVersion = '1.2.12'
        mysqlConnectorVersion = '8.0.30'
        shardingsphereVersion = '4.1.1'
        hutoolVersion = '5.8.6'
        springdocVersion = '1.6.11'
        knife4jVersion = '3.0.3'
        gsonVersion = '2.9.1'
        fastjsonVersion = '2.0.15'
        guavaVersion = '31.1-jre'
        commonsLang3Version = '3.12.0'
        commonsIoVersion = '2.11.0'
        commonsCodecVersion = '1.15'
        commonsBeanutilsVersion = '1.9.4'
        commonsCollections4Version = '4.4'
        logstashVersion = '7.2'
        skywalkingVersion = '8.12.0'
        caffeineVersion = '2.9.3'
        xxlJobVersion = '2.3.1'
        okhttpVersion = '4.10.0'
        retrofitVersion = '3.0.0'
        feignOkhttpVersion = '12.1'
        sl4jApiVersion = '2.0.5'
        aliyunSdkOssVersion = '3.15.1'
        micrometerRegistryPrometheusVersion = '1.10.2'
    }

    repositories {
        maven { url 'https://maven.aliyun.com/repository/public/' }
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }
}

allprojects {
    apply plugin: 'idea'
    apply plugin: 'java-library'

    version = '1.0.0-SNAPSHOT'

    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11

    [compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

    compileJava.options.compilerArgs.addAll(['-parameters'])
}

subprojects {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'application'

    jar {
        enabled = true
    }

    bootJar {
        enabled = false
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
            mavenBom "com.alibaba.cloud:spring-cloud-alibaba-dependencies:${springCloudAlibabaVersion}"

            mavenBom "org.apache.dubbo:dubbo-spring-boot-starter:${dubboVersion}"
            mavenBom "de.codecentric:spring-boot-admin-starter-server:${springBootAdminVersion}"
            mavenBom "org.springframework.security.oauth:spring-security-oauth2:${springSecurityOauth2Version}"
            mavenBom "org.springframework.cloud:spring-cloud-starter-oauth2:${springCloudStarterOauth2Version}"
            mavenBom "org.springframework.security:spring-authorization-server:${springAuthorizationServerVersion}"
            mavenBom "org.mapstruct:mapstruct:${mapstructVersion}"
            mavenBom "com.nimbusds:nimbus-jose-jwt:${nimbusJoseJwtVersion}"
            mavenBom "com.github.pagehelper:pagehelper-spring-boot-starter:${pagehelperStarterVersion}"
            mavenBom "com.github.pagehelper:pagehelper:${pagehelperVersion}"
            mavenBom "com.baomidou:mybatis-plus-boot-starter:${mybatisPlusVersion}"
            mavenBom "com.github.yulichang:mybatis-plus-join-boot-starter:${mybatisPlusJoinVersion}"
            mavenBom "com.baomidou:mybatis-plus-generator:${mybatisPlusGeneratorVersion}"
            mavenBom "org.freemarker:freemarker:${freemarkerVersion}"
            mavenBom "com.alibaba:druid-spring-boot-starter:${druidVersion}"
            mavenBom "mysql:mysql-connector-java:${mysqlConnectorVersion}"
            mavenBom "org.apache.shardingsphere:shardingsphere-jdbc-core-spring-boot-starter:${shardingsphereVersion}"
            mavenBom "cn.hutool:hutool-all:${hutoolVersion}"
            mavenBom "org.springdoc:springdoc-openapi-ui:${springdocVersion}"
            mavenBom "org.springdoc:springdoc-openapi-webflux-ui:${springdocVersion}"
            mavenBom "com.github.xiaoymin:knife4j-springdoc-ui:${knife4jVersion}"
            mavenBom "com.google.code.gson:gson:${gsonVersion}"
            mavenBom "com.alibaba:fastjson:${fastjsonVersion}"
            mavenBom "com.google.guava:guava:${guavaVersion}"
            mavenBom "org.apache.commons:commons-lang3:${commonsLang3Version}"
            mavenBom "commons-io:commons-io:${commonsIoVersion}"
            mavenBom "commons-codec:commons-codec:${commonsCodecVersion}"
            mavenBom "commons-beanutils:commons-beanutils:${commonsBeanutilsVersion}"
            mavenBom "org.apache.commons:commons-collections4:${commonsCollections4Version}"
            mavenBom "net.logstash.logback:logstash-logback-encoder:${logstashVersion}"
            mavenBom "org.apache.skywalking:apm-toolkit-logback-1.x:${skywalkingVersion}"
            mavenBom "org.apache.skywalking:apm-toolkit-trace:${skywalkingVersion}"
            mavenBom "com.github.ben-manes.caffeine:caffeine:${caffeineVersion}"
            mavenBom "com.xuxueli:xxl-job-core:${xxlJobVersion}"
            mavenBom "com.squareup.okhttp3:okhttp:${okhttpVersion}"
            mavenBom "com.github.lianjiatech:retrofit-spring-boot-starter:${retrofitVersion}"
            mavenBom "io.github.openfeign:feign-okhttp:${feignOkhttpVersion}"
            mavenBom "org.slf4j:slf4j-api:${sl4jApiVersion}"
            mavenBom "com.aliyun.oss:aliyun-sdk-oss:${aliyunSdkOssVersion}"
            mavenBom "io.micrometer:micrometer-registry-prometheus:${micrometerRegistryPrometheusVersion}"
        }
    }

    dependencies {

    }

    test {
        useJUnitPlatform()
    }
}





