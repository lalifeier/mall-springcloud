buildscript {
    apply from: rootProject.file( 'gradle/libraries.gradle' )

    repositories {
        maven { url 'https://maven.aliyun.com/repository/public/' }
        maven {url 'https://developer.huawei.com/repo/'}
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }
}

allprojects {
    apply plugin: 'java'

    version = '1.0.0-SNAPSHOT'

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    [compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

    compileJava.options.compilerArgs.addAll(['-parameters'])
}

subprojects {
    apply plugin: 'idea'
    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply from: rootProject.file( 'gradle/libraries.gradle' )

    repositories {
        maven { url 'https://maven.aliyun.com/repository/public/' }
        maven { url 'https://developer.huawei.com/repo/'}
        mavenLocal()
        mavenCentral()
    }

//    configurations {
//        compileOnly {
//            extendsFrom annotationProcessor
//        }
//    }

//    jar {
//        enabled = true
//    }
//
//    bootJar {
//        enabled = false
//    }

    idea {
        module {
            downloadJavadoc = false
            downloadSources = false
            inheritOutputDirs = false
            outputDir = file("$buildDir/classes/main/")
        }
    }

    dependencyManagement {
        imports {
            mavenBom libraries.springBoot
            mavenBom libraries.springCloud
            mavenBom libraries.springCloudAlibaba
        }

        dependencies {
            dependency libraries.dubbo
            dependency libraries.springBootAdmin
            dependency libraries.springSecurityOauth2
            dependency libraries.springCloudOauth2
            dependency libraries.springAuthorizationServer
            dependency libraries.mapstruct
            dependency libraries.mapstructProcessor
            dependency libraries.nimbusJoseJwt
            dependency libraries.pagehelperStarter
            dependency libraries.pagehelper
            dependency libraries.mybatisPlus
            dependency libraries.mybatisPlusJoin
            dependency libraries.mybatisPlusGenerator
            dependency libraries.freemarker
            dependency libraries.druid
            dependency libraries.mysqlConnector
            dependency libraries.shardingsphere
            dependency libraries.hutool
            dependency libraries.springdoc
            dependency libraries.springdocWebflux
            dependency libraries.knife4j
            dependency libraries.gson
            dependency libraries.fastjson
            dependency libraries.guava
            dependency libraries.commonsLang3
            dependency libraries.commonsIo
            dependency libraries.commonsCodec
            dependency libraries.commonsBeanutils
            dependency libraries.commonsCollections4
            dependency libraries.logstash
            dependency libraries.skywalking
            dependency libraries.skywalkingTrace
            dependency libraries.caffeine
            dependency libraries.xxlJob
            dependency libraries.okhttp
            dependency libraries.retrofit
            dependency libraries.feignOkhttp
            dependency libraries.slf4j
            dependency libraries.aliyunSdkOss
            dependency libraries.micrometerRegistryPrometheus
        }
    }

    dependencies {
        compileOnly libraries.lombok
        annotationProcessor libraries.lombok
        testCompileOnly libraries.lombok
        testAnnotationProcessor libraries.lombok

//        api libraries.slf4j

        annotationProcessor libraries.mapstructProcessor
        testAnnotationProcessor libraries.mapstructProcessor
    }

    test {
        useJUnitPlatform()
    }
}
