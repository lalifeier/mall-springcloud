server:
  port: 0
  servlet:
    context-path: /

grpc:
  server:
    port: 0
#  client:
#    grpc_server:
#      negotiation-type: plaintext

spring:
  profiles:
    active: dev

  #  jackson:
  #    date-format: yyyy-MM-dd HH:mm:ss
  #    time-zone: GMT+8
  #    serialization:
  #      write_enums_using_to_string: true

  sql:
    init:
      mode: always
      schema-locations: classpath:schema/schema.sql
  #      data-locations: classpath:schema/data.sql

  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/demo?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai&useSSL=false
    username: root
    password: 123456

  cloud:
    stream:
      #      rocketmq:
      #        name-server: localhost:9876
      #        producer:
      #          group: my-group
      #        consumer:
      #          group: my-group
      kafka:
        binder:
          brokers: localhost:9092
          auto-create-topics: true
          required-acks: 1
      bindings:
        sink1-in-0:
          destination: test1
        #          content-type: text/plain
        source1-out-0:
          destination: test1
    function:
      definition: sink1;source1

mybatis-plus:
  mapper-locations: classpath:mapper/*.xml
  global-config:
    db-config:
      logic-delete-field: is_deleted
      logic-delete-value: 1
      logic-not-delete-value: 0
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    map-underscore-to-camel-case: true
    cache-enabled: false
    url-encoder: false
#  type-enums-package: com.github.lalifeier.mall.cloud.demo.enums

dubbo:
  application:
    name: ${spring.application.name}
  protocol:
    name: tri #dubbo tri grpc rest
    port: -1
  #  registry:
  #    address: nacos://localhost:8848
  #  scan:
  #    base-packages: com.github.lalifeier.mall.demo.presentation.rpc
  #  consumer:
  #    check: false
  #  cloud:
  #    subscribed-services:

xxl:
  job:
    admin:
      # 调度中心部署跟地址 [选填]：如调度中心集群部署存在多个地址则用逗号分隔。
      # 执行器将会使用该地址进行"执行器心跳注册"和"任务结果回调"；为空则关闭自动注册；
      addresses: http://127.0.0.1:8086/xxl-job-admin
    # 执行器通讯TOKEN [选填]：非空时启用；
    accessToken:
    executor:
      # 执行器AppName [选填]：执行器心跳注册分组依据；为空则关闭自动注册
      appname: xxl-job-executor-mileage
      # 执行器注册 [选填]：优先使用该配置作为注册地址，为空时使用内嵌服务 ”IP:PORT“ 作为注册地址。
      #从而更灵活的支持容器类型执行器动态IP和动态映射端口问题。
      address:
      # 执行器IP [选填]：默认为空表示自动获取IP，多网卡时可手动设置指定IP，该IP不会绑定Host仅作为通讯实用；
      # 地址信息用于 "执行器注册" 和 "调度中心请求并触发任务"；
      ip:
      # 执行器端口号 [选填]：小于等于0则自动获取；默认端口为9999，单机部署多个执行器时，注意要配置不同执行器端口；
      port: 8088
      # 执行器运行日志文件存储磁盘路径 [选填] ：需要对该路径拥有读写权限；为空则使用默认路径；
      logpath: /data/applogs/xxl-job/jobhandler
      # 执行器日志文件保存天数 [选填] ： 过期日志自动清理, 限制值大于等于3时生效; 否则, 如-1, 关闭自动清理功能；
      logretentiondays: 30

feign:
  client:
    config:
      default:
        connectTimeout: 2000
        readTimeout: 5000
  #    sentinel:
  #      enabled: true

  compression:
    request:
      enabled: true
      mime-types: text/xml,application/xml, application/json
      min-request-size: 1024
    response:
      enabled: true
  httpclient:
    enabled: false
  okhttp:
    enabled: true
#    readTimeout: 5000
#    writeTimeout: 10000
#    connectTimeout: 10000
#  ribbon:
#    ReadTimeout: 5000
#    ConnectTimeout: 5000

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always

logging:
  level:
    root: debug
