server:
  port: 18000

spring:
  profiles:
    active: dev

  #  mvc:
  #    pathmatch:
  #      matching-strategy: ant_path_matcher

  cloud:
    gateway:
      routes:
        - id: mall-demo
          uri: lb://mall-demo
          predicates:
            - Path=/demo/**
          filters:
            - StripPrefix=1
        - id: mall-account
          uri: lb://mall-account
          predicates:
            - Path=/account/**
          filters:
            - StripPrefix=1
        - id: mall-auth
          uri: lb://mall-auth
          predicates:
            - Path=/auth/**
          filters:
            - StripPrefix=1
        - id: mall-auth-login
          uri: lb://mall-auth
          predicates:
            - Path=/login
          filters:
            - PreserveHostHeader
        - id: mall-auth-token
          uri: lb://mall-auth
          predicates:
            - Path=/oauth2/token
          filters:
            - PreserveHostHeader
        - id: mall-auth-authorize
          uri: lb://mall-auth
          predicates:
            - Path=/oauth2/authorize
          filters:
            - PreserveHostHeader
        - id: mall-account
          uri: lb://mall-account
          predicates:
            - Path=/account/**
          filters:
            - StripPrefix=1
        - id: mall-admin
          uri: lb://mall-admin
          predicates:
            - Path=/admin/**
          filters:
            - StripPrefix=1

      discovery:
        locator:
          enabled: true

  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://127.0.0.1:8101/oauth2/jwks
  #      client:
  #        registration:
  #          messaging-gateway-oidc:
  #            provider: gateway-client-provider
  #            client-id: test_client
  #            client-secret: secret
  #            redirect-uri:  "{baseUrl}/login/oauth2/code/{registrationId}"
  #            authorization-grant-type: authorization_code
  #            client-authentication-method: client_secret_basic
  #            scope:
  #              - openid
  #              - profile
  ##            client-name: messaging-gateway-oidcs
  #        provider:
  #          gateway-client-provider:
  #            issuer-uri: http://localhost:8101

  redis:
    host: localhost
    port: 6379
    database: 0
    password:

  data:
    mongodb:
      host: localhost
      port: 27017
      database: access_log
      username: root
      password: 123456
      authentication-database: admin

gateway:
  white-urls:
    - "/actuator/**"
    - "/login"
    - "/oauth2/token"
    - "/oauth2/authorize"
    - "/doc.html"
    - "/swagger-resources/**"
    - "/swagger/**"
    - "/*/v3/api-docs"
    - "/*/*.js"
    - "/*/*.css"
    - "/*/*.png"
    - "/*/*.ico"
    - "/webjars/**"
    - "/demo/**"
  sign:
    enabled: false
    timeout: 6000
    white-urls:
      - "/actuator/**"
      - "/login"
      - "/oauth2/token"
      - "/oauth2/authorize"
      - "/doc.html"
      - "/swagger-resources/**"
      - "/swagger/**"
      - "/*/v3/api-docs"
      - "/*/*.js"
      - "/*/*.css"
      - "/*/*.png"
      - "/*/*.ico"
      - "/webjars/**"

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
