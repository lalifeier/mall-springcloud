version: "3.7"

networks:
  app_net:
    external: true

services:
  mysql:
    image: mysql:5.7
    container_name: mysql
    hostname: mysql
    ports:
      - 3306:3306
    networks:
      - app_net
    restart: always
    environment:
      - TZ=Asia/Shanghai
      - MYSQL_USER=lalifeir
      - MYSQL_PASSWORD=123456
      - MYSQL_ROOT_PASSWORD=123456
    volumes:
      - ./mysql/conf.d:/etc/mysql/conf.d
      - /data/mysql/data:/var/lib/mysql
      - /data/mysql/logs:/var/log/mysql

  redis:
    image: redis:alpine
    container_name: redis
    hostname: redis
    ports:
      - 6379:6379
    networks:
      - app_net
    restart: always
    environment:
      - TZ=Asia/Shanghai
    volumes:
      - ./redis/redis.conf:/etc/redis/redis.conf
      - /data/redis/data:/data
    command:
      - redis-server
      - /etc/redis/redis.conf

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - 80:80
      - 443:443
    networks:
      - app_net
    restart: always
    privileged: true
    environment:
      - TZ=Asia/Shanghai
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./data/nginx/logs:/var/log/nginx
      # - /code:/var/www/html

  #  http://127.0.0.1:8848/nacos
  #  初始账号密码为 nacos/nacos
  nacos:
    image: nacos/nacos-server:v2.1.1
    container_name: nacos
    ports:
      - 8848:8848
      - 9848:9848
    networks:
      - app_net
    restart: always
    environment:
      - TZ=Asia/Shanghai
      - MODE=standalone
      - NACOS_APPLICATION_PORT=8848
      #      - SPRING_DATASOURCE_PLATFORM=mysql
      #      - MYSQL_SERVICE_HOST=mysql
      #      - MYSQL_SERVICE_PORT=3306
      #      - MYSQL_SERVICE_USER=root
      #      - MYSQL_SERVICE_PASSWORD=123456
      #      - MYSQL_SERVICE_DB_NAME=nacos_config
      - JVM_XMS=256m
      - JVM_XMX=256m
    volumes:
      - /data/nacos/logs:/home/nacos/logs
  #      - /data/nacos/init.d/custom.properties:/home/nacos/init.d/custom.properties

  #  http://127.0.0.1::8858
  #  初始账号密码为 sentinel/sentinel
  sentinel-dashboard:
    image: sentinel-dashboard:1.8.5
    container_name: sentinel-dashboard
    build:
      context: ./sentinel
      dockerfile: Dockerfile
    ports:
      - 8858:8858
      - 8719:8719
    networks:
      - app_net
    restart: always
    environment:
      - TZ=Asia/Shanghai

  elasticsearch:
    image: elasticsearch:8.0.0
    container_name: elasticsearch
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - app_net
    restart: always
    environment:
      - TZ=Asia/Shanghai
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    volumes:
      - ./elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      # - ./elasticsearch/cert/elastic-certificates.p12:/usr/share/elasticsearch/config/elastic-certificates.p12
      - /data/elasticsearch/data:/usr/share/elasticsearch/data
      - /data/elasticsearch/logs:/usr/share/elasticsearch/logs
      - /data/elasticsearch/plugins:/usr/share/elasticsearch/plugins

  kibana:
    image: kibana:8.0.0
    container_name: kibana
    ports:
      - 5601:5601
    networks:
      - app_net
    restart: always
    environment:
      - TZ=Asia/Shanghai
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    volumes:
      - ./kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
    depends_on:
      - elasticsearch

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - 9411:9411
    networks:
      - app_net
    restart: always
    environment:
      - TZ=Asia/Shanghai
      - STORAGE_TYPE=elasticsearch
      - ES_HOSTS=elasticsearch:9200
    depends_on:
      - elasticsearch

  zipkin-dependencies:
    image: openzipkin/zipkin-dependencies
    container_name: zipkin-dependencies
    networks:
      - app_net
    restart: always
    environment:
      - TZ=Asia/Shanghai
      - STORAGE_TYPE=elasticsearch
      - ES_HOSTS=elasticsearch:9200
      - ES_INDEX=zipkin
    entrypoint: crond -f
    depends_on:
      - elasticsearch


  rmqnamesrv:
    image: apache/rocketmq:4.5.0
    container_name: rmqnamesrv
    ports:
      - 9876:9876
    networks:
      - app_net
    restart: always
    environment:
      - TZ=Asia/Shanghai
      - JAVA_OPT=-server -Xms512m -Xmx512m
    volumes:
      - /data/rocketmq/namesrv/logs:/home/rocketmq/logs
      - /data/rocketmq/namesrv/store:/home/rocketmq/store
    command: sh mqnamesrv

  rmqbroker:
    image: apache/rocketmq:4.5.0
    container_name: rmqbroker
    ports:
      - 10909:10909
      - 10911:10911
      - 10912:10912
    networks:
      - app_net
    restart: always
    environment:
      - TZ=Asia/Shanghai
      - NAMESRV_ADDR=rmqnamesrv:9876
      - JAVA_OPT_EXT=-server -Xms512M -Xmx512M -Xmn256m
    volumes:
      - /data/rocketmq/broker/logs:/home/rocketmq/logs
      - /data/rocketmq/broker/store:/home/rocketmq/store
    #      - ./rocketmq/broker/conf/broker.conf:/home/rocketmq/rocketmq-4.5.0/conf/broker.conf
    command: sh mqbroker
    #    command: sh mqbroker -n namesrv:9876 -c ../conf/broker.conf
    depends_on:
      - rmqnamesrv

  rmqconsole:
    image: styletang/rocketmq-console-ng
    container_name: rmqconsole
    ports:
      - 8080:8080
    networks:
      - app_net
    restart: always
    environment:
      - TZ=Asia/Shanghai
      - JAVA_OPTS=-Drocketmq.namesrv.addr=rmqnamesrv:9876 -Dcom.rocketmq.sendMessageWithVIPChannel=false
    depends_on:
      - rmqnamesrv

  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - 27017:27017
    networks:
      - app_net
    restart: always
    # privileged: true
    environment:
      - TZ=Asia/Shanghai
      - MONGO_INITDB_DATABASE=test
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=123456
      - MONGO_USERNAME=user
      - MONGO_PASSWORD=123456
    volumes:
      - ./mongo/docker-entrypoint-initdb.d/mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh
      - ./mongo/conf:/data/configdb
      - /data/mongo/db:/data/db
      - /data/mongo/log:/var/log/mongodb
    command: [ "mongod", "--config", "/data/configdb/mongod.conf" ]