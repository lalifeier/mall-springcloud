<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration>
<configuration scan="true" scanPeriod="60 seconds" debug="false">
  <!--引用默认日志配置-->
  <!--<include resource="org/springframework/boot/logging/logback/defaults.xml"/>-->

  <!-- 彩色日志依赖的渲染类 -->
  <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter"/>
  <conversionRule conversionWord="wex"
                  converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"/>
  <conversionRule conversionWord="wEx"
                  converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"/>

  <!-- 应用名称 -->
  <springProperty name="APP_NAME" scope="context" source="spring.application.name" defaultValue="springBoot"/>
  <!-- Logstash 主机地址 -->
  <springProperty name="LOG_STASH_HOST" scope="context" source="logstash.host" defaultValue="localhost"/>
  <!-- 日志级别 -->
  <springProperty name="LEVEL" scope="context" source="logging.level.root"/>

  <!-- 日志文件路径 -->
  <property name="LOG_FILE_PATH" value="${LOG_FILE:-${LOG_PATH:-${LOG_TEMP:-${java.io.tmpdir:-/tmp}}}/logs}"/>
  <!-- 控制台日志格式模式 -->
  <property name="CONSOLE_LOG_PATTERN"
            value="${CONSOLE_LOG_PATTERN:-%clr(%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}}){faint} %clr([%X{traceId}]) %clr([%X{tid}]) %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>
  <!-- 控制台日志字符集 -->
  <property name="CONSOLE_LOG_CHARSET" value="${CONSOLE_LOG_CHARSET:-${file.encoding:-UTF-8}}"/>
  <!-- 文件日志格式模式 -->
  <property name="FILE_LOG_PATTERN"
            value="${FILE_LOG_PATTERN:-%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}} [%X{traceId}] [%X{tid}] ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } --- [%t] %-40.40logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>
  <!-- 文件日志字符集 -->
  <property name="FILE_LOG_CHARSET" value="${FILE_LOG_CHARSET:-${file.encoding:-UTF-8}}"/>

  <!-- 日志输出到控制台 -->
  <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
    <!-- 过滤器，根据日志级别过滤日志 -->
    <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
      <!-- 日志级别 -->
      <level>${LEVEL}</level>
    </filter>
    <!-- 编码器，定义日志输出格式 -->
    <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
      <!-- 日志布局 -->
      <layout class="org.apache.skywalking.apm.toolkit.log.logback.v1.x.TraceIdPatternLogbackLayout">
        <!-- 日志输出格式 -->
        <pattern>${CONSOLE_LOG_PATTERN}</pattern>
      </layout>
      <!-- 日志编码字符集 -->
      <charset>${CONSOLE_LOG_CHARSET}</charset>
    </encoder>
  </appender>

  <!-- GRPC日志输出 -->
  <!--  <appender name="GRPC" class="org.apache.skywalking.apm.toolkit.log.logback.v1.x.log.GRPCLogClientAppender">-->
  <!--    &lt;!&ndash; 编码器，定义日志输出格式 &ndash;&gt;-->
  <!--    <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">-->
  <!--      &lt;!&ndash; 布局 &ndash;&gt;-->
  <!--      <layout class="org.apache.skywalking.apm.toolkit.log.logback.v1.x.mdc.TraceIdMDCPatternLogbackLayout">-->
  <!--        &lt;!&ndash; 日志格式模式 &ndash;&gt;-->
  <!--        <pattern>${FILE_LOG_PATTERN}</pattern>-->
  <!--      </layout>-->
  <!--      &lt;!&ndash; 字符集 &ndash;&gt;-->
  <!--      <charset>${FILE_LOG_CHARSET}</charset>-->
  <!--    </encoder>-->
  <!--  </appender>-->

  <!-- 日志输出到文件 -->
  <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <!-- 过滤器，根据日志级别过滤日志 -->
    <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
      <!-- 日志级别 -->
      <level>${LEVEL}</level>
    </filter>
    <!-- 日志文件路径和名称 -->
    <file>${LOG_FILE_PATH}/${APP_NAME}.log</file>
    <!-- 编码器，定义日志输出格式 -->
    <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
      <!-- 日志布局 -->
      <layout class="org.apache.skywalking.apm.toolkit.log.logback.v1.x.TraceIdPatternLogbackLayout">
        <!-- 日志输出格式 -->
        <pattern>${FILE_LOG_PATTERN}</pattern>
      </layout>
      <!-- 日志编码字符集 -->
      <charset>${FILE_LOG_CHARSET}</charset>
    </encoder>
    <!-- 日志滚动策略 -->
    <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
      <!-- 日志文件名称模式 -->
      <fileNamePattern>${LOG_FILE_PATH}/${APP_NAME}-%d{yyyy-MM-dd}-%i.log</fileNamePattern>
      <!-- 单个日志文件最大大小 -->
      <maxFileSize>${LOG_FILE_MAX_SIZE:-10MB}</maxFileSize>
      <!-- 最大保留的历史日志文件数量 -->
      <maxHistory>${LOG_FILE_MAX_HISTORY:-30}</maxHistory>
    </rollingPolicy>
  </appender>

  <!--错误日志输出到文件-->
  <appender name="FILE_ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <!-- 过滤器，只接受 ERROR 级别的日志 -->
    <filter class="ch.qos.logback.classic.filter.LevelFilter">
      <!-- 日志级别为 ERROR -->
      <level>ERROR</level>
      <!-- 匹配时接受日志 -->
      <onMatch>ACCEPT</onMatch>
      <!-- 不匹配时拒绝日志 -->
      <onMismatch>DENY</onMismatch>
    </filter>
    <!-- 错误日志文件路径和名称 -->
    <file>${LOG_FILE_PATH}/${APP_NAME}_error.log</file>
    <!-- 编码器，定义日志输出格式 -->
    <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
      <!-- 日志布局 -->
      <layout class="org.apache.skywalking.apm.toolkit.log.logback.v1.x.TraceIdPatternLogbackLayout">
        <!-- 日志输出格式 -->
        <pattern>${FILE_LOG_PATTERN}</pattern>
      </layout>
      <!-- 日志编码字符集 -->
      <charset>${FILE_LOG_CHARSET}</charset>
    </encoder>
    <!-- 日志滚动策略 -->
    <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
      <!-- 日志文件名称模式 -->
      <fileNamePattern>${LOG_FILE_PATH}/${APP_NAME}-error-%d{yyyy-MM-dd}-%i.log</fileNamePattern>
      <!-- 单个日志文件最大大小 -->
      <maxFileSize>${LOG_FILE_MAX_SIZE:-10MB}</maxFileSize>
      <!-- 最大保留的历史日志文件数量 -->
      <maxHistory>${LOG_FILE_MAX_HISTORY:-30}</maxHistory>
    </rollingPolicy>
  </appender>

  <!--  &lt;!&ndash; 日志输出到LogStash &ndash;&gt;-->
  <!--  <appender name="LOG_STASH" class="net.logstash.logback.appender.LogstashTcpSocketAppender">-->
  <!--    &lt;!&ndash; 过滤器，根据日志级别过滤日志 &ndash;&gt;-->
  <!--    <filter class="ch.qos.logback.classic.filter.ThresholdFilter">-->
  <!--      &lt;!&ndash; 日志级别 &ndash;&gt;-->
  <!--      <level>${LEVEL}</level>-->
  <!--    </filter>-->
  <!--    &lt;!&ndash; Logstash 服务器地址和端口 &ndash;&gt;-->
  <!--    <destination>${LOG_STASH_HOST}:4560</destination>-->
  <!--    &lt;!&ndash; 编码器，定义日志输出格式 &ndash;&gt;-->
  <!--    <encoder charset="UTF-8" class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">-->
  <!--      &lt;!&ndash; 日志提供者 &ndash;&gt;-->
  <!--      <providers>-->
  <!--        &lt;!&ndash; 时间戳 &ndash;&gt;-->
  <!--        <timestamp>-->
  <!--          &lt;!&ndash; 时区 &ndash;&gt;-->
  <!--          <timeZone>Asia/Shanghai</timeZone>-->
  <!--        </timestamp>-->
  <!--        &lt;!&ndash; 自定义格式 &ndash;&gt;-->
  <!--        <pattern>-->
  <!--          &lt;!&ndash; 自定义格式模式 &ndash;&gt;-->
  <!--          <pattern>-->
  <!--            {-->
  <!--            "service": "${APP_NAME:-}",-->
  <!--            "level": "%level",-->
  <!--            "pid": "${PID:-}",-->
  <!--            "thread": "%thread",-->
  <!--            "class": "%logger",-->
  <!--            "message": "%message",-->
  <!--            "stack_trace": "%exception{20}"-->
  <!--            }-->
  <!--          </pattern>-->
  <!--        </pattern>-->
  <!--      </providers>-->
  <!--    </encoder>-->
  <!--    &lt;!&ndash; 连接策略 &ndash;&gt;-->
  <!--    <connectionStrategy>-->
  <!--      &lt;!&ndash; 轮询策略 &ndash;&gt;-->
  <!--      <roundRobin>-->
  <!--        &lt;!&ndash; 连接超时时间 &ndash;&gt;-->
  <!--        <connectionTTL>5 minutes</connectionTTL>-->
  <!--      </roundRobin>-->
  <!--    </connectionStrategy>-->
  <!--  </appender>-->


  <!-- 日志输出到LogStash -->
  <appender name="LOG_STASH" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <!-- 过滤器，根据日志级别过滤日志 -->
    <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
      <!-- 日志级别 -->
      <level>${LEVEL}</level>
    </filter>
    <!-- 日志文件路径和名称 -->
    <file>${LOG_FILE_PATH}/${APP_NAME}.json</file>
    <!-- 编码器，定义日志输出格式 -->
    <encoder charset="UTF-8" class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
      <!-- 日志提供者 -->
      <providers>
        <!-- 时间戳 -->
        <timestamp>
          <!-- 时区 -->
          <timeZone>Asia/Shanghai</timeZone>
        </timestamp>
        <!-- 自定义格式 -->
        <pattern>
          <!-- 自定义格式模式 -->
          <pattern>
            {
            "project": "mall",
            "level": "%level",
            "service": "${APP_NAME:-}",
            "tid": "%X{tid}",
            "skyWalkingContext": "%sw_ctx",
            "pid": "${PID:-}",
            "thread": "%thread",
            "class": "%logger",
            "message": "%message",
            "stack_trace": "%exception{20}"
            }
          </pattern>
        </pattern>
      </providers>
    </encoder>
    <!-- 日志滚动策略 -->
    <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
      <!-- 日志文件名称模式 -->
      <fileNamePattern>${LOG_FILE_PATH}/${APP_NAME}-%d{yyyy-MM-dd}-%i.json</fileNamePattern>
      <!-- 单个日志文件最大大小 -->
      <maxFileSize>${LOG_FILE_MAX_SIZE:-10MB}</maxFileSize>
      <!-- 最大保留的历史日志文件数量 -->
      <maxHistory>${LOG_FILE_MAX_HISTORY:-30}</maxHistory>
    </rollingPolicy>
  </appender>

  <!-- 异步日志输出 -->
  <appender name="ASYNC" class="ch.qos.logback.classic.AsyncAppender">
    <!-- 丢弃阈值，0 表示不丢弃任何日志 -->
    <discardingThreshold>0</discardingThreshold>
    <!-- 队列大小 -->
    <queueSize>1024</queueSize>
    <!-- 是否禁止阻塞 -->
    <neverBlock>true</neverBlock>
    <!-- 引用其他 appender -->
    <appender-ref ref="FILE"/>
    <appender-ref ref="FILE_ERROR"/>
    <!-- <appender-ref ref="GRPC"/> -->
    <appender-ref ref="LOG_STASH"/>
  </appender>

  <!-- 日志级别配置 -->
  <logger name="org.slf4j" level="INFO"/>
  <logger name="springfox" level="INFO"/>
  <logger name="io.swagger" level="INFO"/>
  <logger name="org.springframework" level="INFO"/>
  <logger name="org.hibernate.validator" level="INFO"/>
  <logger name="com.alibaba.nacos" level="INFO"/>

  <!-- 根日志级别配置 -->
  <root level="DEBUG">
    <!-- 引用其他 appender -->
    <appender-ref ref="CONSOLE"/>
    <appender-ref ref="ASYNC"/>
  </root>

  <logger name="com.github.lalifeier.mall.cloud.common.aspect.WebLogAspect" level="DEBUG">
    <!--    <appender-ref ref="LOG_STASH_RECORD"/>-->
  </logger>

</configuration>
